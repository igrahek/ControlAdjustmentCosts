geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2)) +
facet_grid(cols=vars(intervalType), rows=vars(blockType)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
# Density plots with means
p = ggplot(df.ppc.data %>% filter(Response),
aes(x=rt_unsigned,color='Correct',linetype='True')) +
geom_density(size=1) +
geom_density(data=df.ppc.data %>% filter(!Response),
size=1,
aes(x=rt_unsigned,y=-..density..*ratio.true,color='Incorrect',linetype='True')) +
geom_density(data=df.ppc.sim %>% filter(simResponse),
size=1,
aes(x=rt_sampled_unsigned,color='Correct',linetype='Simulation')) +
geom_density(data=df.ppc.sim %>% filter(!simResponse),
size=1,
aes(x=rt_sampled_unsigned,y=-..density..*ratio.simu,color='Incorrect',linetype='Simulation')) +
geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2)) +
facet_grid(cols=vars(intervalType), rows=vars(blockType)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
# Density plots with means
p = ggplot(df.ppc.data %>% filter(Response),
aes(x=rt_unsigned,color='Correct',linetype='True')) +
geom_density(size=1) +
geom_density(data=df.ppc.data %>% filter(!Response),
size=1,
aes(x=rt_unsigned,y=-..density..,color='Incorrect',linetype='True')) +
geom_density(data=df.ppc.sim %>% filter(simResponse),
size=1,
aes(x=rt_sampled_unsigned,color='Correct',linetype='Simulation')) +
geom_density(data=df.ppc.sim %>% filter(!simResponse),
size=1,
aes(x=rt_sampled_unsigned,y=-..density,color='Incorrect',linetype='Simulation')) +
geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2)) +
facet_grid(cols=vars(intervalType), rows=vars(blockType)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
# Density plots with means
p = ggplot(df.ppc.data %>% filter(Response),
aes(x=rt_unsigned,color='Correct',linetype='True')) +
geom_density(size=1) +
geom_density(data=df.ppc.data %>% filter(!Response),
size=1,
aes(x=rt_unsigned,y=-..density..,color='Incorrect',linetype='True')) +
geom_density(data=df.ppc.sim %>% filter(simResponse),
size=1,
aes(x=rt_sampled_unsigned,color='Correct',linetype='Simulation')) +
geom_density(data=df.ppc.sim %>% filter(!simResponse),
size=1,
aes(x=rt_sampled_unsigned,y=-..density..,color='Incorrect',linetype='Simulation')) +
geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2)) +
facet_grid(cols=vars(intervalType), rows=vars(blockType)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
df.ppc <- fread('output/Mixed/ae_only/modelMixed4/modelMixed4_simData.csv') %>%
mutate(simResponse=rt_sampled>0,
Response=rt>0,
rt_unsigned = abs(rt),
rt_sampled_unsigned = abs(rt_sampled))
df.ppc.sim <- df.ppc %>% filter(sample==0,rt_sampled_unsigned<=3)
df.ppc.data <- df.ppc %>% filter(sample==0,rt_unsigned<=3)
ratio.true <- sum(!df.ppc.data$Response)/sum(df.ppc.data$Response)
ratio.simu <- sum(!df.ppc.sim$simResponse)/sum(df.ppc.sim$simResponse)
# Density plots with means
p = ggplot(df.ppc.data %>% filter(Response),
aes(x=rt_unsigned,color='Correct',linetype='True')) +
geom_density(size=1) +
geom_density(data=df.ppc.data %>% filter(!Response),
size=1,
aes(x=rt_unsigned,y=-..density..*ratio.true,color='Incorrect',linetype='True')) +
geom_density(data=df.ppc.sim %>% filter(simResponse),
size=1,
aes(x=rt_sampled_unsigned,color='Correct',linetype='Simulation')) +
geom_density(data=df.ppc.sim %>% filter(!simResponse),
size=1,
aes(x=rt_sampled_unsigned,y=-..density..*ratio.simu,color='Incorrect',linetype='Simulation')) +
geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2),ylim=c(0,3)) +
facet_grid(cols=vars(intervalType), rows=vars(blockType)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
FigS1_A = p
df.ppc <- fread('output/Mixed/ae_only/modelMixed4/modelMixed4_simData.csv') %>%
mutate(simResponse=rt_sampled>0,
Response=rt>0,
rt_unsigned = abs(rt),
rt_sampled_unsigned = abs(rt_sampled))
df.ppc.sim <- df.ppc %>% filter(sample==0,rt_sampled_unsigned<=3)
df.ppc.data <- df.ppc %>% filter(sample==0,rt_unsigned<=3)
ratio.true <- sum(!df.ppc.data$Response)/sum(df.ppc.data$Response)
ratio.simu <- sum(!df.ppc.sim$simResponse)/sum(df.ppc.sim$simResponse)
# Density plots with means
p = ggplot(df.ppc.data %>% filter(Response),
aes(x=rt_unsigned,color='Correct',linetype='True')) +
geom_density(size=1) +
geom_density(data=df.ppc.data %>% filter(!Response),
size=1,
aes(x=rt_unsigned,y=-..density..*ratio.true,color='Incorrect',linetype='True')) +
geom_density(data=df.ppc.sim %>% filter(simResponse),
size=1,
aes(x=rt_sampled_unsigned,color='Correct',linetype='Simulation')) +
geom_density(data=df.ppc.sim %>% filter(!simResponse),
size=1,
aes(x=rt_sampled_unsigned,y=-..density..*ratio.simu,color='Incorrect',linetype='Simulation')) +
geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2),ylim=c(-0.5,3)) +
facet_grid(cols=vars(intervalType), rows=vars(blockType)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
# Density plots with means
p = ggplot(df.ppc.data %>% filter(Response),
aes(x=rt_unsigned,color='Correct',linetype='True')) +
geom_density(size=1) +
geom_density(data=df.ppc.data %>% filter(!Response),
size=1,
aes(x=rt_unsigned,y=-..density..*ratio.true,color='Incorrect',linetype='True')) +
geom_density(data=df.ppc.sim %>% filter(simResponse),
size=1,
aes(x=rt_sampled_unsigned,color='Correct',linetype='Simulation')) +
geom_density(data=df.ppc.sim %>% filter(!simResponse),
size=1,
aes(x=rt_sampled_unsigned,y=-..density..*ratio.simu,color='Incorrect',linetype='Simulation')) +
geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2),ylim=c(-0.3,3)) +
facet_grid(cols=vars(intervalType), rows=vars(blockType)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
FigS1_A = p
# Save the figure
pdf(file="../../../Manuscript/figures/Figure_S1_A.pdf",height=10,width=10)
p = cowplot::plot_grid(FigS1_A,
nrow = 1,
ncol = 1)
p
dev.off()
setwd("C:/Users/igrahek/Dropbox (Brown)/CLPS-ShenhavLab/Experiments/CAC/CAC_Paper_Repo_2023/ControlAdjustmentCosts/Analyses/Experiment2/ddm")
# test
library(dplyr)
library(ggplot2)
library(purrr)
library(tidyr)
library(gridExtra)
library(cowplot)
library(sjPlot)
library(RColorBrewer)
library(knitr)
library(data.table)
library(grDevices)
library(brms)
library(viridis)
# Functions
test.params <- function(df) {
inner_join(inner_join(inner_join(df %>%
map_dfr(mean) %>%
gather(parameter, estimate, everything()) %>% dplyr::rename(Mean=estimate),
df %>%
map_dfr(sd) %>%
gather(parameter, estimate, everything()) %>% dplyr::rename(SD=estimate),by='parameter'),
df %>% map(~ .x > 0) %>%
map_dfr(mean) %>%
gather(parameter, pvalue, everything()) %>%
mutate(pvalue = if_else(round(pvalue)==1, 1-pvalue, pvalue),
sig = if_else(pvalue < 0.001, "***",
if_else(pvalue < 0.01, "**",
if_else(pvalue < 0.05, "*", "n.s."))))),
inner_join(df %>%
map_dfr(function(x) return(quantile(x,0.975)[[1]])) %>%
gather(parameter, estimate, everything()) %>% dplyr::rename(CI_upper=estimate),
df %>% map_dfr(function(x) return(quantile(x,0.025)[[1]])) %>%
gather(parameter, estimate, everything()) %>% dplyr::rename(CI_lower=estimate),by='parameter'),by='parameter')
}
# Define the summary posterior function
summarize_posterior <- function(V1,V2,effect) {
post = as.data.frame(V1-V2)
ggplot(data=post,aes(x=`V1 - V2`)) +
geom_histogram(bins=50) +
geom_vline(xintercept=0, linetype="dotted",size=1) +
labs(title=paste(effect,"p<0 = ",length(post[post<0])/length(post$`V1 - V2`))) +
theme_classic()
}
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
# Base template
gg <- list(
theme_bw(),
theme(plot.title = element_text(hjust = 0.5, size=13),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(0.75, "lines"),
legend.box.spacing = unit(0.5, "lines"),
legend.position = "bottom",
legend.margin = margin(c(0, 0, 0, 0), unit='lines'))
)
# Density template
ggdensity <- list(
gg,
theme(panel.spacing = unit(0.25, "lines"),
legend.key.size = unit(0.7, "lines"),
legend.direction = "horizontal",
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
legend.box.spacing = unit(0.25, "lines"))
)
df.ppc <- fread('output/Mixed/ae_only/modelMixed3/modelMixed3_simData.csv') %>%
mutate(simResponse=rt_sampled>0,
Response=rt>0,
rt_unsigned = abs(rt),
rt_sampled_unsigned = abs(rt_sampled))
df.ppc.sim <- df.ppc %>% filter(sample==0,rt_sampled_unsigned<=3)
df.ppc.data <- df.ppc %>% filter(sample==0,rt_unsigned<=3)
ratio.true <- sum(!df.ppc.data$Response)/sum(df.ppc.data$Response)
ratio.simu <- sum(!df.ppc.sim$simResponse)/sum(df.ppc.sim$simResponse)
# Density plots with means
p = ggplot(df.ppc.data %>% filter(Response),
aes(x=rt_unsigned,color='Correct',linetype='True')) +
geom_density(size=1) +
geom_density(data=df.ppc.data %>% filter(!Response),
size=1,
aes(x=rt_unsigned,y=-..density..*ratio.true,color='Incorrect',linetype='True')) +
geom_density(data=df.ppc.sim %>% filter(simResponse),
size=1,
aes(x=rt_sampled_unsigned,color='Correct',linetype='Simulation')) +
geom_density(data=df.ppc.sim %>% filter(!simResponse),
size=1,
aes(x=rt_sampled_unsigned,y=-..density..*ratio.simu,color='Incorrect',linetype='Simulation')) +
geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2),ylim=c(-0.3,3)) +
facet_grid(cols=vars(intervalType),rows=vars(blockType)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
FigS1_B = p
p
# Save the figure
pdf(file="../../../Manuscript/figures/Figure_S1_B.pdf",height=10,width=15)
p = cowplot::plot_grid(FigS1_B,
nrow = 1,
ncol = 1)
p
dev.off()
setwd("C:/Users/igrahek/Dropbox (Brown)/CLPS-ShenhavLab/Experiments/CAC/CAC_Paper_Repo_2023/ControlAdjustmentCosts/Analyses/Experiment3/ddm")
df.ppc <- fread('output/Mixed/ae_only/modelMixed3/modelMixed3_simData.csv') %>%
mutate(simResponse=rt_sampled>0,
Response=rt>0,
rt_unsigned = abs(rt),
rt_sampled_unsigned = abs(rt_sampled))
df.ppc.sim <- df.ppc %>% filter(sample==0,rt_sampled_unsigned<=3)
df.ppc.data <- df.ppc %>% filter(sample==0,rt_unsigned<=3)
ratio.true <- sum(!df.ppc.data$Response)/sum(df.ppc.data$Response)
ratio.simu <- sum(!df.ppc.sim$simResponse)/sum(df.ppc.sim$simResponse)
# Density plots with means
p = ggplot(df.ppc.data %>% filter(Response),
aes(x=rt_unsigned,color='Correct',linetype='True')) +
geom_density(size=1) +
geom_density(data=df.ppc.data %>% filter(!Response),
size=1,
aes(x=rt_unsigned,y=-..density..*ratio.true,color='Incorrect',linetype='True')) +
geom_density(data=df.ppc.sim %>% filter(simResponse),
size=1,
aes(x=rt_sampled_unsigned,color='Correct',linetype='Simulation')) +
geom_density(data=df.ppc.sim %>% filter(!simResponse),
size=1,
aes(x=rt_sampled_unsigned,y=-..density..*ratio.simu,color='Incorrect',linetype='Simulation')) +
geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2),ylim=c(-0.3,3)) +
facet_grid(cols=vars(intervalType),rows=vars(blockType,isi)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
FigS1_C = p
# Save the figure
pdf(file="../../../Manuscript/figures/Figure_S1_C.pdf",height=20,width=10)
p = cowplot::plot_grid(FigS1_C,
nrow = 1,
ncol = 1)
p
dev.off()
setwd("C:/Users/igrahek/Dropbox (Brown)/CLPS-ShenhavLab/Experiments/CAC/CAC_Paper_Repo_2023/ControlAdjustmentCosts/Analyses/Experiment4/ddm")
df.ppc <- fread('output/Mixed/ae_only/modelMixed3/modelMixed3_simData.csv') %>%
mutate(simResponse=rt_sampled>0,
Response=rt>0,
rt_unsigned = abs(rt),
rt_sampled_unsigned = abs(rt_sampled))
df.ppc.sim <- df.ppc %>% filter(sample==0,rt_sampled_unsigned<=3)
df.ppc.data <- df.ppc %>% filter(sample==0,rt_unsigned<=3)
ratio.true <- sum(!df.ppc.data$Response)/sum(df.ppc.data$Response)
ratio.simu <- sum(!df.ppc.sim$simResponse)/sum(df.ppc.sim$simResponse)
# Density plots with means
p = ggplot(df.ppc.data %>% filter(Response),
aes(x=rt_unsigned,color='Correct',linetype='True')) +
geom_density(size=1) +
geom_density(data=df.ppc.data %>% filter(!Response),
size=1,
aes(x=rt_unsigned,y=-..density..*ratio.true,color='Incorrect',linetype='True')) +
geom_density(data=df.ppc.sim %>% filter(simResponse),
size=1,
aes(x=rt_sampled_unsigned,color='Correct',linetype='Simulation')) +
geom_density(data=df.ppc.sim %>% filter(!simResponse),
size=1,
aes(x=rt_sampled_unsigned,y=-..density..*ratio.simu,color='Incorrect',linetype='Simulation')) +
geom_hline(yintercept=0) +
ggdensity +
xlab('Reaction Time') +
ylab('Density') +
coord_cartesian(xlim=c(0,2),ylim=c(-0.3,3)) +
facet_grid(cols=vars(intervalType),rows=vars(blockType)) +
scale_linetype_manual(name='Data:',values=c('Simulation'=1,'True'=2)) +
scale_color_manual(name='Response:',values=c('Correct'='blue','Incorrect'='red')) +
theme(axis.line = element_line(colour = "black"),
plot.margin=grid::unit(c(5,5,5,5), "mm"),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = 0, l = 0),color="black"),
text = element_text(size=25,color = "black"),
panel.border = element_rect (colour = "black", fill = F),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.ticks = element_line(color = "black"),
legend.position = c(0.8, 0.25),
legend.background = element_rect(fill = "transparent", color = NA))
p
FigS1_D = p
# Save the figure
pdf(file="../../../Manuscript/figures/Figure_S1_D.pdf",height=20,width=10)
p = cowplot::plot_grid(FigS1_D,
nrow = 1,
ncol = 1)
p
dev.off()
